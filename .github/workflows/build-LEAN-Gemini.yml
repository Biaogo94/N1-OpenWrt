name: Build OpenWrt for N1 (Gemini)

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - name: 1. Checkout repository
        uses: actions/checkout@v4

      - name: 2. Maximize build space
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 1024
          swap-size-mb: 1
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'
          remove-codeql: 'true'
          remove-docker-images: 'true'

      - name: 3. Show disk usage after cleanup
        run: df -hT

      - name: 4. Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get -y install \
            ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential \
            bzip2 ccache clang cmake cpio curl device-tree-compiler fastjar flex gawk \
            gettext genisoimage git gperf haveged help2man intltool libelf-dev libfuse-dev \
            libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev \
            libncursesw5-dev libpython3-dev libreadline-dev libssl-dev libtool lrzsz \
            mkisofs msmtp nano ninja-build p7zip p7zip-full patch pkgconf python2.7 \
            python3 python3-pip python3-pyelftools python3-setuptools qemu-utils rsync \
            scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip vim \
            wget xmlto xxd zlib1g-dev gn
          sudo timedatectl set-timezone Asia/Shanghai

      - name: 5. Clone OpenWrt source code
        run: |
          git clone --depth 1 https://github.com/coolsnowwolf/lede -b master openwrt
      
      - name: 6. Load custom files & Run DIY script
        run: |
          [ -d "N1-LEDE/files" ] && cp -r N1-LEDE/files openwrt/
          [ -f "N1-LEDE/.config" ] && cp N1-LEDE/.config openwrt/
          if [ -f "N1-LEDE/diy.sh" ]; then
            chmod +x N1-LEDE/diy.sh
            cd openwrt
            ../N1-LEDE/diy.sh
          else
            echo "::error:: diy.sh not found!"
            exit 1
          fi
        
      - name: 7. Update and install feeds
        working-directory: ./openwrt
        run: |
          ./scripts/feeds update -a
          ./scripts/feeds install -a
          echo "### Disk space after feeds install ###"
          df -hT

      - name: 8. Download packages
        working-directory: ./openwrt
        run: |
          make defconfig
          make download -j$(nproc)
          find dl -size -1024c -exec rm -f {} \;
          echo "### Disk space after download ###"
          df -hT

      - name: 9. Compile the firmware
        id: compile
        working-directory: ./openwrt
        run: |
          echo "Starting firmware compilation..."
          make -j$(nproc) || make -j1 V=s
          echo "compile_status=$?" >> $GITHUB_OUTPUT
          echo "### Disk space after compile ###"
          df -hT

      - name: 10. CRITICAL - Free up disk space after build
        if: steps.compile.outputs.compile_status == '0'
        working-directory: ./openwrt
        run: |
          echo "Firmware compiled. Cleaning up build artifacts..."
          rm -rf build_dir
          rm -rf tmp
          echo "### Disk space after cleanup ###"
          df -hT

      - name: 11. Package the firmware
        if: steps.compile.outputs.compile_status == '0'
        uses: unifreq/openwrt_packit@master
        env:
          OPENWRT_ARMVIRT: openwrt/bin/targets/*/*/openwrt-amlogic-mesongx-phicomm_n1-rootfs.tar.gz
          PACKAGE_SOC: s905d
          WHOAMI: fightroad

      - name: 12. Set packaging status
        if: steps.compile.outputs.compile_status == '0'
        run: echo "PACKAGED_STATUS=success" >> $GITHUB_ENV

      - name: 13. Upload to Release
        uses: ncipollo/release-action@v1
        if: env.PACKAGED_STATUS == 'success'
        with:
          tag: OpenWrt_N1_${{ env.PACKAGED_OUTPUTDATE }}
          name: OpenWrt for N1 | ${{ env.PACKAGED_OUTPUTDATE }}
          artifacts: /opt/openwrt_packit/output/*
          allowUpdates: true
          token: ${{ secrets.GITHUB_TOKEN }}
          body: "Lean OpenWrt build for Phicomm N1"

      - name: 14. Delete old releases
        uses: dev-drprasad/delete-older-releases@v0.3.1
        if: always()
        with:
          keep_latest: 10
          delete_tags: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
