# =================================================================
# Name: Build OpenWRT-LEAN for N1 (Optimized Version)
# Author: Perplexity AI based on user's request
# Description: This workflow builds OpenWrt firmware for the N1 device.
# It is optimized for clarity, stability, and efficiency.
# =================================================================

name: Build OpenWRT-LEAN for N1

on:
  workflow_dispatch:
    # inputs:
    #   ssh:
    #     description: 'SSH connection to Actions'
    #     required: false
    #     default: 'false'

env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  CONFIG_FILE: N1-LEDE/.config
  DIY_SH: N1-LEDE/diy.sh
  FILES: N1-LEDE/files
  TZ: Asia/Shanghai

jobs:
  build:
    # runs-on: self-hosted
    runs-on: ubuntu-22.04

    steps:
    - name: 1. Checkout repository
      uses: actions/checkout@v4 # 使用版本标签v4替代main，更稳定

    - name: 2. Check machine configuration
      if: runner.os == 'Linux' # 仅在Linux环境下运行
      run: |
        echo "警告⚠"
        echo "分配的服务器性能有限，若选择的插件过多，务必注意CPU性能！"
        echo "云编译建议取消勾选Node.js及其相关插件！"
        echo "-------------------------- CPU INFO --------------------------"
        echo "CPU Model: $(cat /proc/cpuinfo | grep 'model name' | uniq | sed -e 's/.*: //')"
        echo "CPU Cores: $(nproc)"
        echo "-------------------------- MEMORY INFO -------------------------"
        sudo lshw -short -C memory | grep GiB || echo "Memory info not available"
        echo "-------------------------- DISK INFO ---------------------------"
        df -hT
        echo "=============================================================================="

    # ------------------------------------------------------------------------------------
    # 以下磁盘清理步骤主要针对 GitHub 托管的 Runner。
    # 如果您使用空间充足的 self-hosted runner，可以安全地注释或删除它们。
    # - name: Optimize Disk Space (For GitHub Hosted Runners)
    #   uses: hugoalh/disk-space-optimizer-ghaction@v0.8.1
    #   with:
    #     operate_sudo: "True"
    #     general_include: ".+"
    #     general_exclude: |-
    #       ^GCC$
    #       ^G\+\+$
    #       Clang
    #       LLVM
    #     docker_prune: "True"
    #     docker_clean: "True"
    #     apt_prune: "True"
    #     apt_clean: "True"
    # ------------------------------------------------------------------------------------

    - name: 3. Initialize build environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo apt-get update
        # 将依赖项直接列出，避免使用不稳定的短链接
        # 参考 coolsnowwolf/lede [1] 仓库推荐的依赖列表
        sudo apt-get -y install \
          ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential \
          bzip2 ccache clang cmake cpio curl device-tree-compiler fastjar flex gawk \
          gettext genisoimage git gperf haveged help2man intltool libelf-dev libfuse-dev \
          libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev \
          libncursesw5-dev libpython3-dev libreadline-dev libssl-dev libtool lrzsz \
          mkisofs msmtp nano ninja-build p7zip p7zip-full patch pkgconf python2.7 \
          python3 python3-pip python3-pyelftools python3-setuptools qemu-utils rsync \
          scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip vim \
          wget xmlto xxd zlib1g-dev gn
        sudo apt-get -y autoremove --purge
        sudo apt-get clean
        sudo timedatectl set-timezone "$TZ"

    - name: 4. Clone OpenWrt source code
      run: |
        git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt
        cd openwrt
        # 修正 coolsnowwolf/luci 的源地址，以适应新的 openwrt-23.05 分支结构
        sed -i 's|https://github.com/coolsnowwolf/luci.git;openwrt-23.05|https://github.com/coolsnowwolf/luci|g' feeds.conf.default

    - name: 5. Setup cache for build
      uses: stupidloud/cachewrtbuild@main # 这个Action很方便，继续使用
      with:
        ccache: 'true'
        mixkey: amlogic-${{ env.REPO_BRANCH }}
        prefix: ${{ github.workspace }}/openwrt

    - name: 6. Update and install feeds
      working-directory: ./openwrt
      run: |
        ./scripts/feeds update -a
        ./scripts/feeds install -a

    - name: 7. Load custom configuration and DIY script
      run: |
        [ -e "$FILES" ] && mv "$FILES" openwrt/files
        [ -e "$CONFIG_FILE" ] && mv "$CONFIG_FILE" openwrt/.config
        chmod +x "$DIY_SH"
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_SH
    
    # - name: SSH connection to Actions
    #   uses: P3TERX/ssh2actions@v1.0.0
    #   if: github.event.inputs.ssh == 'true'

    - name: 8. Download toolchain and packages
      working-directory: ./openwrt
      run: |
        make defconfig
        make download -j$(nproc)
        # 删除下载不完整的文件 (小于1KB)，以便下次重新下载
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: 9. Compile the firmware
      id: compile
      run: |
        cd openwrt
        echo "Starting firmware compilation with $(nproc) threads..."
        # 使用 set +e 允许第一个 make 命令失败，然后继续执行后续命令
        set +e
        make -j$(nproc)
        # 检查上一个命令的退出码
        if [ $? -ne 0 ]; then
          echo "Parallel compilation failed, retrying with single thread for verbose log..."
          make -j1 V=s
        fi
        # 检查编译是否最终成功
        if [ $? -eq 0 ]; then
          echo "compile_status=success" >> $GITHUB_ENV
          echo "Firmware compilation successful!"
        else
          echo "compile_status=failure" >> $GITHUB_ENV
          echo "Firmware compilation failed."
          exit 1
        fi

    - name: 10. Package OpenWrt Firmware
      id: package
      if: success() && env.compile_status == 'success'
      uses: unifreq/openwrt_packit@master # 该Action社区专用性强，保持不变
      env:
        OPENWRT_ARMVIRT: openwrt/bin/targets/*/*/openwrt-amlogic-mesongx-phicomm_n1-rootfs.tar.gz
        KERNEL_VERSION_NAME: 5.15.176 # 注意: 这个内核版本是硬编码的
        KERNEL_AUTO_LATEST: false
        PACKAGE_SOC: s905d
        WHOAMI: fightroad
        SW_FLOWOFFLOAD: 1
        SFE_FLOW: 0

    - name: 11. Upload OpenWrt Firmware to Release
      uses: ncipollo/release-action@v1 # 使用版本标签v1替代main
      if: success() && env.PACKAGED_STATUS == 'success'
      with:
        tag: OpenWrt_N1_${{ env.PACKAGED_OUTPUTDATE }}
        name: OpenWrt for N1 | ${{ env.PACKAGED_OUTPUTDATE }}
        artifacts: /opt/openwrt_packit/output/*
        allowUpdates: true
        token: ${{ secrets.GITHUB_TOKEN }}
        body: |
          **Firmware built from Lean's OpenWrt source**
          
          Recommended for new installations.
          
          ### Default Access Info
          - **IP Address:** 192.168.2.2
          - **Username:** root
          - **Password:** password
          
          *Built on: `${{ env.PACKAGED_OUTPUTDATE }}`*

    - name: 12. Delete old workflow runs and releases
      uses: dev-drprasad/delete-older-releases@v0.3.1 # 使用版本标签替代master
      if: always() # 无论前面是否成功，都尝试清理
      with:
        keep_latest: 10
        delete_tags: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
